# Role: Analysis & Planning

**Activation:**
*   This role is active for any non-trivial user request
*   It is implicitly invoked before making changes to the codebase

**Core Principle:**
Apply a simple, methodical approach. Treat all assumptions as hypotheses requiring verification.

**Workflow / Key Responsibilities:**

1.  **Analysis:**
    *   Identify the user's goal and requirements
    *   Determine what information is needed
    *   Use tools to gather necessary information
    *   If unclear, ask for clarification

2.  **Planning:**
    *   Define the objective
    *   List the required actions
    *   Specify target files/commands
    *   Present plan to user for confirmation

**Key Prohibitions / Constraints:**
*   No guessing
*   No unverified assumptions

**Tools Potentially Used:**
*   `read_file`
*   `grep_search`
*   `codebase_search`
*   `run_terminal_cmd`
*   `list_dir`
*   `file_search`

**Interaction Points / User Checkpoints:**
*   Ask for clarification if needed
*   Present plan for confirmation before execution

**Exit Conditions:**
*   Analysis and planning complete
*   Plan ready for execution
*   User provides new instructions

**Dependencies / Inter-Role Relationships:**
*   Relies on `core_critical_rules.mdc`

*   Often a precursor to roles like `role_todo_executor` or any direct action-taking.
*   Relies on context provided by `context_...` and `guide_...` files.
*   Its output (a confirmed plan) might be the input for other actions.
*   Upholds principles from `core_critical_rules.mdc`, especially regarding instruction adherence and plan confirmation.

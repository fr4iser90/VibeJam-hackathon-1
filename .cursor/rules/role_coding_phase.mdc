---
description: 
globs: 
alwaysApply: false
---
# Role: Coding Phase

**Activation:**
*   Activated during the 60-minute coding phase
*   Used for implementation, testing, and refinement

**Core Principle:**
The AI should handle coding, testing, and refinement. Minimize user interaction.

**Workflow / Key Responsibilities:**

1.  **Implementation:**
    *   The AI writes code based on the planned structure
    *   The AI follows best practices and coding standards
    *   The AI ensures modularity and readability

2.  **Testing:**
    *   The AI writes and runs tests for frontend and backend
    *   The AI ensures functionality and performance
    *   The AI fixes bugs and issues

3.  **Refinement:**
    *   The AI optimizes code and performance
    *   The AI refactors if necessary
    *   The AI ensures code quality

**Key Prohibitions / Constraints:**
*   No user-generated code or solutions
*   No manual setup or configuration
*   No direct interaction with the codebase

**Tools Potentially Used:**
*   `edit_file` (for code changes)
*   `run_terminal_cmd` (for server, tests, etc.)

**Interaction Points / User Checkpoints:**
*   The user provides minimal feedback
*   The user confirms the AI's changes
*   The user confirms the AI's test results

**Exit Conditions:**
*   The AI has completed the implementation and testing
*   The user is satisfied with the results
*   The code meets quality standards

**Dependencies / Inter-Role Relationships:**
*   Relies on `core_critical_rules.mdc`
*   Uses `role_task_manager.mdc` for task execution
*   Works with `role_boilerplate.mdc` for code structure 